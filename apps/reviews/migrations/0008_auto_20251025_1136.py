# Generated by Django 4.2.7 on 2025-10-25 11:36

from django.db import migrations


def populate_professor_from_lab(apps, schema_editor):
    """Populate professor field from lab's head_professor or first professor"""
    Review = apps.get_model('reviews', 'Review')

    for review in Review.objects.filter(professor__isnull=True, lab__isnull=False):
        lab = review.lab
        professor = None

        # Try to get head_professor first
        if hasattr(lab, 'head_professor') and lab.head_professor:
            professor = lab.head_professor
        # Fallback to legacy professor field
        elif hasattr(lab, 'professor') and lab.professor:
            professor = lab.professor
        # Fallback to first professor from lab.professors relationship
        elif hasattr(lab, 'professors') and lab.professors.exists():
            professor = lab.professors.first()

        if professor:
            review.professor = professor
            review.save()


def reverse_populate_professor(apps, schema_editor):
    """Reverse migration - clear professor field"""
    Review = apps.get_model('reviews', 'Review')
    Review.objects.update(professor=None)


class Migration(migrations.Migration):

    dependencies = [
        ('reviews', '0007_alter_review_unique_together_review_professor_and_more'),
        ('labs', '0007_remove_lab_professors'),
        ('universities', '0006_professor_lab'),
    ]

    operations = [
        migrations.RunPython(populate_professor_from_lab, reverse_populate_professor),
    ]
